{"version":3,"sources":["hooks/useLocalStorage.js","context/GlobalProvider/GlobalProvider.js","context/ContactsProvider/ContactsProvider.js","context/ConversationsProvider/ConversationsProvider.js","context/SocketProvider/SocketProvider.js","view/components/NewConversationModal.js","view/components/Conversations.js","view/components/AddFriendModal.js","view/components/Friends.js","view/components/Sidebar.js","view/components/Chat.js","view/Dashboard/Dashboard.js","view/Login/Login.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","GlobalContext","createContext","useGlobal","useContext","GlobalProvider","children","ctx","id","setId","createId","uuidV4","Provider","ContactsContext","useContacts","ContactsProvider","contacts","setContacts","createContact","name","prevState","ConversationsContext","useConversations","ConversationsProvider","conversations","setConversations","selectedConversationId","setSelectedConversationId","socket","useSocket","formattedConversations","map","recipients","messages","formattedRecipients","recipient","contact","find","formattedMessages","message","sender","fromMe","senderName","addMessageToConversation","useCallback","text","console","log","newConversation","newMessage","newConversations","conversation","arr1","arr2","length","sort","every","element","index","on","off","createConversation","selectedConversation","sendMessage","emit","SocketContext","SocketProvider","setSocket","newSocket","io","window","location","origin","replace","query","close","NewConversationModal","closeModal","selectedContactIds","setSelectedContactIds","handleCheckboxChange","contactId","includes","filter","Modal","Header","closeButton","Body","Form","onSubmit","e","preventDefault","Group","controlId","Check","type","label","onChange","bind","Button","Conversations","modalOpen","setModalOpen","className","ListGroup","variant","Item","active","action","onClick","join","show","onHide","AddFriendModal","idRef","useRef","nameRef","current","Label","Control","ref","required","Friends","eventKeys","Sidebar","activeKey","setActiveKey","style","width","Tab","Container","onSelect","Nav","Link","eventKey","Content","Pane","Chat","setText","setRef","node","scrollIntoView","smooth","lastMessage","recipientIds","InputGroup","target","height","resize","Append","Dashboard","props","Login","handleSubmit","newId","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81ef896e.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst PREFIX = 'myChat.';\n\nexport const useLocalStorage = (key, initialValue) => {\n    const prefixedKey = PREFIX + key;\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey);\n        if (jsonValue != null) return JSON.parse(jsonValue);\n        if (typeof initialValue === 'function') {\n            return initialValue();\n        } else {\n            return initialValue;\n        }\n    });\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\n    }, [value, prefixedKey]);\n\n    return [value, setValue];\n};","import React, { createContext, useContext } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { useLocalStorage } from '../../hooks/';\n\nconst GlobalContext = createContext();\n\nconst GlobalProvider = ({ children }) => {\n    const [id, setId] = useLocalStorage('id', '');\n\n    const createId = () => {\n        return uuidV4();\n    };\n\n    const ctx = {\n        id,\n        setId,\n        createId,\n    }\n    \n\n    return <GlobalContext.Provider value={ctx}>{children}</GlobalContext.Provider>\n}\n\nexport const useGlobal = () => useContext(GlobalContext);\n\nexport default GlobalProvider;","import React, { createContext, useContext } from 'react'\n\nimport { useLocalStorage } from '../../hooks'\n\nconst ContactsContext = createContext()\n\nconst ContactsProvider = ({ children }) => {\n    const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n    const createContact = (id, name) => {\n        setContacts((prevState) => [...prevState, { id, name }]);\n    }\n\n    const ctx = {\n        contacts,\n        createContact,\n    }\n\n    return (\n        <ContactsContext.Provider value={ctx}>{children}</ContactsContext.Provider>\n    )\n}\n\nexport const useContacts = () => useContext(ContactsContext);\n\nexport default ContactsProvider;","import React, {\n    createContext,\n    useContext,\n    useState,\n    useEffect,\n    useCallback } from 'react'\n\nimport { useLocalStorage } from '../../hooks'\nimport { useContacts, useGlobal, useSocket } from '../../context';\n\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) return false;\n    arr1.sort();\n    arr2.sort();\n    return arr1.every((element, index) => element === arr2[index]);\n};\n\nconst ConversationsContext = createContext();\n\nconst ConversationsProvider = ({ children }) => {\n    const [conversations, setConversations] = useLocalStorage('conversations', []);\n    const [selectedConversationId, setSelectedConversationId] = useState(0);\n    const { contacts } = useContacts();\n    const { socket } = useSocket();\n    const { id } = useGlobal();\n\n    const createConversation = (recipients) => {\n        setConversations((prevState) => [...prevState, { recipients, messages: [] }]);\n    };\n\n    const formattedConversations = conversations.map(({ recipients, messages }) => {\n        const formattedRecipients = recipients.map((recipient) => {\n            const contact = contacts.find((contact) => contact.id === recipient);\n            const name = (contact && contact.name) || recipient;\n            return { id: recipient, name };\n        });\n\n        const formattedMessages = messages.map((message) => {\n            const contact = contacts.find((contact) => contact.id === message.sender);\n            const name = (contact && contact.name) || message.sender;\n            const fromMe = id === message.sender;\n            return { ...message, senderName: name, fromMe }\n        })\n\n        return { ...conversations, recipients: formattedRecipients, messages: formattedMessages };\n    })\n\n    const addMessageToConversation = useCallback(({ recipients, sender, text }) => {\n        console.log('message received')\n        setConversations((prevState) => {\n            let newConversation = true;\n            const newMessage = { sender, text };\n            const newConversations = prevState.map((conversation) => {\n                console.log(conversation.recipient, recipients)\n                if (arraysEqual(conversation.recipients, recipients)) {\n                    newConversation = false;\n                    return {\n                        ...conversation,\n                        messages: [...conversation.messages, newMessage]\n                    }\n                }\n                return conversation;\n            });\n\n            if (!newConversation) {\n                return newConversations;\n            } else {\n                return [\n                    ...prevState,\n                    { recipients, messages: [newMessage] }\n                ]\n            }\n        })\n    }, [setConversations]);\n\n    const sendMessage = (recipients, text) => {\n        socket.emit('send-message', { recipients, text });\n        addMessageToConversation({ recipients, sender: id, text });\n    };\n\n    useEffect(() => {\n        if (!socket) return;\n\n        socket.on('receive-message', addMessageToConversation)\n\n        return () => socket.off('receive-message');\n    }, [socket, addMessageToConversation]);\n\n    const ctx = {\n        conversations,\n        createConversation,\n        formattedConversations,\n        selectedConversationId,\n        selectedConversation: formattedConversations[selectedConversationId],\n        setSelectedConversationId,\n        sendMessage,\n        addMessageToConversation,\n    };\n\n    return (\n        <ConversationsContext.Provider value={ctx}>{children}</ConversationsContext.Provider>\n    );\n}\n\nexport const useConversations = () => useContext(ConversationsContext);\n\nexport default ConversationsProvider;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nimport { useGlobal } from '../../context';\n\nconst httpUrlToWebSockeUrl = (url) => {\n    return url.replace(/(http)(s)?\\:\\/\\//, \"ws$2://\");\n}\n\nconst SocketContext = createContext();\n\nconst SocketProvider = ({ children }) => {\n    const { id } = useGlobal();\n    const [socket, setSocket] = useState();\n\n    useEffect(() => {\n        const newSocket = io(httpUrlToWebSockeUrl(window.location.origin), { query: { id } });\n        setSocket(newSocket);\n\n        return () => newSocket.close();\n    }, [id]);\n    \n\n    const ctx = {\n       socket,\n    };\n    \n\n    return <SocketContext.Provider value={ctx}>{children}</SocketContext.Provider>\n}\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport default SocketProvider;","import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nimport { useContacts, useConversations } from '../../context';\n\nexport default function NewConversationModal({ closeModal }) {\n    const [selectedContactIds, setSelectedContactIds] = useState([]);\n    const { contacts } = useContacts();\n    const { createConversation } = useConversations();\n\n    const handleCheckboxChange = (contactId) => {\n        setSelectedContactIds((prevState) => {\n            if (prevState.includes(contactId)) {\n                return prevState.filter((id) => id !== contactId);\n            } else {\n                return [...prevState, contactId];\n            }\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        createConversation(selectedContactIds);\n        closeModal();\n    };\n\n    return (\n        <>\n            <Modal.Header closeButton>Csevegés létrehozása</Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    {contacts.map((contact) => (\n                        <Form.Group controlId={contact.id} key={contact.id}>\n                            <Form.Check \n                                type=\"checkbox\"\n                                value={selectedContactIds.includes(contact.id)}\n                                label={contact.name}\n                                onChange={handleCheckboxChange.bind(null, contact.id)}\n                            />\n                        </Form.Group>\n                    ))}\n                    <Button type=\"submit\">Létrehozás</Button>\n                </Form>\n            </Modal.Body>\n        </>\n    );\n};\n","import React, { useState } from 'react';\nimport { Button, Modal, ListGroup } from 'react-bootstrap';\n\nimport { useConversations } from '../../context'\n\nimport NewConversationModal from './NewConversationModal';\n\nconst Conversations = () => {\n    const [modalOpen, setModalOpen] = useState(false)\n    const { formattedConversations, selectedConversationId, setSelectedConversationId } = useConversations();\n\n    const openModalHandler = () => {\n        setModalOpen(true);\n    }\n\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n\n    return (\n        <div className=\"d-flex flex-column justify-content-between h-100\">\n            <div>\n                <ListGroup variant=\"flush\">\n                    {formattedConversations.map((conversation, index) => (\n                        <ListGroup.Item\n                            key={index}\n                            active={index === selectedConversationId}\n                            action\n                            onClick={setSelectedConversationId.bind(null, index)}>\n                            {conversation.recipients.map((recipient) => recipient.name).join(', ')}\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </div>\n            <Button className=\"rounded-0\" onClick={openModalHandler}>\n                Csevegés létrehozása\n            </Button>\n\n            <Modal show={modalOpen} onHide={closeModal}>\n                <NewConversationModal closeModal={closeModal}/>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Conversations;","import React, { useRef } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nimport { useContacts } from '../../context';\n\nexport default function AddFriendModal({ closeModal }) {\n    const idRef = useRef();\n    const nameRef = useRef();\n    const { createContact } = useContacts();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        createContact(idRef.current.value, nameRef.current.value);\n        closeModal();\n    }\n\n    return (\n        <>\n            <Modal.Header closeButton>Barát hozzáadása</Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>ID</Form.Label>\n                        <Form.Control type=\"text\" ref={idRef} required/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Név</Form.Label>\n                        <Form.Control type=\"text\" ref={nameRef} required/>\n                    </Form.Group>\n                    <Button type=\"submit\">Hozzáad</Button>\n                </Form>\n            </Modal.Body>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { ListGroup, Button, Modal } from 'react-bootstrap';\n\nimport { useContacts } from '../../context'\n\nimport AddFriendModal from './AddFriendModal';\n\nconst Friends = () => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const { contacts } = useContacts();\n\n    const openModalHandler = () => {\n        setModalOpen(true);\n    };\n\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    return (\n        <div className=\"d-flex flex-column justify-content-between h-100\">\n            <div>\n                <ListGroup variant=\"flush\">\n                    {contacts.map((contact) => (\n                        <ListGroup.Item key={contact.id}>\n                            {contact.name}\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </div>\n            <Button className=\"rounded-0\" onClick={openModalHandler}>\n                Barát hozzáadása\n            </Button>\n\n            <Modal show={modalOpen} onHide={closeModal}>\n                <AddFriendModal closeModal={closeModal}/>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Friends;","import React, { useState } from 'react';\n\nimport { Tab, Nav } from 'react-bootstrap';\nimport { useGlobal } from '../../context';\n\nimport Conversations from './Conversations';\nimport Friends from './Friends';\n\nconst eventKeys = {\n    CONVERSATIONS: 'conversations',\n    FRIENDS: 'friends',\n};\n\nconst Sidebar = () => {\n    const [activeKey, setActiveKey] = useState(eventKeys.CONVERSATIONS);\n    const { id } = useGlobal();\n\n    return (\n        <div style={{ width: '250px' }} className=\"d-flex flex-column\">\n            <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\n                <Nav variant=\"tabs\" className=\"justify-content-center\">\n                    <Nav.Item>\n                        <Nav.Link eventKey={eventKeys.CONVERSATIONS}>\n                            Beszélgetések\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey={eventKeys.FRIENDS}>\n                            Barátok\n                        </Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                <Tab.Content className=\"border-right overflow-auto flex-grow-1\">\n                    <Tab.Pane eventKey={eventKeys.CONVERSATIONS} className=\"h-100\">\n                        <Conversations/>\n                    </Tab.Pane>\n                    <Tab.Pane eventKey={eventKeys.FRIENDS} className=\"h-100\">\n                        <Friends/>\n                    </Tab.Pane>\n                </Tab.Content>\n                <div className=\"p-2 border-top border-right small\">\n                    ID: <span className=\"text-muted\">{id}</span>\n                </div>\n            </Tab.Container>\n        </div>\n    )\n};\n\nexport default Sidebar;","import React, { useState, useCallback } from 'react'\nimport { Form, InputGroup, Button } from 'react-bootstrap';\n\nimport { useConversations } from '../../context'\n\nconst Chat = () => {\n    const [text, setText] = useState('');\n    const { sendMessage, selectedConversation: { recipients, messages } } = useConversations();\n    const setRef = useCallback((node) => {\n        if (node) {\n            node.scrollIntoView({ smooth: true })\n        }\n    }, []);\n\n    const handleTextChange = (e) => {\n        setText(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const recipientIds = recipients.map((recipient) => recipient.id);\n        sendMessage(recipientIds, text);\n        setText('');\n    }\n\n    return (\n        <div className=\"d-flex flex-column flex-grow-1\">\n            <div className=\"flex-grow-1 overflow-auto\">\n                <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n                    {messages.map(({text, senderName, fromMe}, index) => {\n                        const lastMessage = messages.length - 1 === index;\n                        return (\n                            <div \n                                ref={lastMessage ? setRef : null}\n                                key={index}\n                                className={`my-1 d-flex flex-column\n                                    ${fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`}\n                            >\n                                <div \n                                className={`rounded px-2 py-1 ${fromMe ? 'bg-primary text-white' : 'border'}`}>\n                                    {text}\n                                </div>\n                                <div className={`text-muted small ${fromMe ? 'text-right' : ''}`}>\n                                    {fromMe ? 'Te' : senderName}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"m-2\">\n                    <InputGroup>\n                        <Form.Control\n                            type=\"textarea\"\n                            required value={text}\n                            onChange={handleTextChange}\n                            style={{ height: '75px', resize: 'none' }}\n                        />\n                        <InputGroup.Append>\n                            <Button type=\"submit\">Küldés</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n\nexport default Chat;\n","import React from 'react';\n\nimport { Sidebar, Chat } from '../components';\nimport { useConversations } from '../../context';\n\n\nconst Dashboard = (props) => {\n    const { selectedConversation } = useConversations();\n    return (\n        <div className=\"d-flex\" style={{ height: '100vh' }}>\n            <Sidebar />\n            {selectedConversation && <Chat/>}\n        </div>\n    )\n};\n\nexport default Dashboard;","import React, { useRef } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\n\nimport { useGlobal } from '../../context'; \n\nconst Login = () => {\n    const idRef = useRef();\n    const { setId, createId } = useGlobal();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setId(idRef.current.value);\n    }\n\n    const handleCreateId = () => {\n        const newId = createId();\n        setId(newId);\n    }\n\n    return (\n        <Container className=\"d-flex align-items-center\" style={{height: '100vh'}}>\n            <Form className=\"w-100\" onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.Label>ID</Form.Label>\n                    <Form.Control type=\"text\" ref={idRef} required></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" className=\"mr-2\" onClick={handleSubmit}>Belépés</Button>\n                <Button variant=\"secondary\" onClick={handleCreateId}>Regisztráció</Button>\n            </Form>\n        </Container>\n    );\n};\n\nexport default Login;","import React from 'react';\n\nimport { useGlobal } from './context'\nimport { Login, Dashboard } from './view';\n\nfunction App() {\n  const { id } = useGlobal();\n\n  return (\n    <>\n      {id ? <Dashboard/> : <Login/>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nimport {\n  GlobalProvider,\n  ContactsProvider,\n  ConversationsProvider,\n  SocketProvider } from './context';\n\nReactDOM.render(\n  <GlobalProvider>\n    <SocketProvider>\n    <ContactsProvider>\n      <ConversationsProvider>\n        <App />\n      </ConversationsProvider>\n    </ContactsProvider>\n    </SocketProvider>\n  </GlobalProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}